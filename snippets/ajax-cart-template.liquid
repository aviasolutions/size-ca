<!-- /snippets/ajax-cart-template.liquid -->
{% comment %}

  This snippet provides the default handlebars.js templates for
  the ajax cart plugin. Use the raw liquid tags to keep the
  handlebar.js template tags as available hooks.

{% endcomment %}
  <script id="CartTemplate" type="text/template">
  {% raw %}
    <form action="/cart" method="post" novalidate class="cart ajaxcart">
      <div class="ajaxcart__inner">
        {{#items}}
        <div class="ajaxcart__product">
          <div class="ajaxcart__row" data-line="{{line}}">
            <div class="grid">
              <div class="grid__item one-quarter">
                <a href="{{url}}" class="ajaxcart__product-image"><img src="{{img}}" alt=""></a>
              </div>
              <div class="grid__item three-quarters">
                <p>
                  <a href="{{url}}" class="ajaxcart__product-name">{{name}}</a>
                  {{#if variation}}
                    <span class="ajaxcart__product-meta">{{variation}}</span>
                  {{/if}}
                  {{#properties}}
                    {{#each this}}
                      {{#if this}}
                        <span class="ajaxcart__product-meta">{{@key}}: {{this}}</span>
                      {{/if}}
                    {{/each}}
                  {{/properties}}
                  {% endraw %}{% if settings.cart_vendor_enable %}{% raw %}
                    <span class="ajaxcart__product-meta">{{ vendor }}</span>
                  {% endraw %}{% endif %}{% raw %}
                </p>

                <div class="grid--full display-table">
                  <div class="grid__item display-table-cell one-half">
                    <div class="ajaxcart__qty">
                      <button type="button" class="ajaxcart__qty-adjust ajaxcart__qty--minus icon-fallback-text" data-id="{{key}}" data-qty="{{itemMinus}}" data-line="{{line}}">
                        <span class="icon icon-minus" aria-hidden="true"></span>
                        <span class="fallback-text" aria-hidden="true">&minus;</span>
                        <span class="visually-hidden">{% endraw %}{{ 'cart.general.reduce_quantity' | t }}{% raw %}</span>
                      </button>
                      <input type="text" name="updates[]" class="ajaxcart__qty-num" value="{{itemQty}}" min="0" data-id="{{key}}" data-line="{{line}}" aria-label="quantity" pattern="[0-9]*">
                      <button type="button" class="ajaxcart__qty-adjust ajaxcart__qty--plus icon-fallback-text" data-id="{{key}}" data-line="{{line}}" data-qty="{{itemAdd}}">
                        <span class="icon icon-plus" aria-hidden="true"></span>
                        <span class="fallback-text" aria-hidden="true">+</span>
                        <span class="visually-hidden">{% endraw %}{{ 'cart.general.increase_quantity' | t }}{% raw %}</span>
                      </button>
                    </div>
                  </div>
                  <div class="grid__item display-table-cell one-half text-right">
                    {{#if discountsApplied}}
                      <small class="ajaxcart-item__price-strikethrough"><s>{{{originalLinePrice}}}</s></small>
                      <br><span>{{{linePrice}}}</span>
                    {{else}}
                      <span>{{{linePrice}}}</span>
                    {{/if}}
                  </div>
                  {{#if discountsApplied}}
                    <div class="grid--full display-table">
                      <div class="grid__item text-right">
                        {{#each discounts}}
                          <small class="ajaxcart-item__discount">{{ this.title }}</small><br>
                        {{/each}}
                      </div>
                    </div>
                  {{/if}}
                </div>
              </div>
            </div>
          </div>
        </div>
        {{/items}}

        {% endraw %}{% if settings.cart_notes_enable %}{% raw %}
          <div>
            <label for="CartSpecialInstructions">{% endraw %}{{ 'cart.general.note' | t }}{% raw %}</label>
            <textarea name="note" class="input-full" id="CartSpecialInstructions">{{ note }}</textarea>
          </div>
        {% endraw %}{% endif %}{% raw %}
      </div>
      <div class="ajaxcart__footer">
        <div class="grid--full">
          <div class="grid__item two-thirds">
            <p>{% endraw %}{{ 'cart.general.subtotal' | t }}{% raw %}</p>
          </div>
          <div class="grid__item one-third text-right">
            <p>{{{totalPrice}}}</p>
          </div>
          {{#if totalCartDiscount}}
            <p class="ajaxcart__savings text-center"><em>{{{totalCartDiscount}}}</em></p>
          {{/if}}
        </div>
        <p class="text-center">{% endraw %}{{ 'cart.general.shipping_at_checkout' | t }}{% raw %}</p>
        <a class="btn--full btn--secondary button btn view__cart" href="/cart">View Cart</a>
        <button type="submit" class="btn--secondary btn--full cart__checkout" name="checkout">
          {% endraw %}{{ 'cart.general.checkout' | t }}{% raw %}
        </button>
        {% endraw %}{% if additional_checkout_buttons %}
          <div class="additional_checkout_buttons">{{ content_for_additional_checkout_buttons }}</div>
        {% endif %}{% raw %}
      </div>
    </form>
  {% endraw %}
  </script>
  <script id="AjaxQty" type="text/template">
  {% raw %}
    <div class="ajaxcart__qty">
      <button type="button" class="ajaxcart__qty-adjust ajaxcart__qty--minus icon-fallback-text" data-id="{{key}}" data-qty="{{itemMinus}}">
        <span class="icon icon-minus" aria-hidden="true"></span>
        <span class="fallback-text" aria-hidden="true">&minus;</span>
        <span class="visually-hidden">{% endraw %}{{ 'cart.general.reduce_quantity' | t }}{% raw %}</span>
      </button>
      <input type="text" class="ajaxcart__qty-num" value="{{itemQty}}" min="0" data-id="{{key}}" aria-label="quantity" pattern="[0-9]*">
      <button type="button" class="ajaxcart__qty-adjust ajaxcart__qty--plus icon-fallback-text" data-id="{{key}}" data-qty="{{itemAdd}}">
        <span class="icon icon-plus" aria-hidden="true"></span>
        <span class="fallback-text" aria-hidden="true">+</span>
        <span class="visually-hidden">{% endraw %}{{ 'cart.general.increase_quantity' | t }}{% raw %}</span>
      </button>
    </div>
  {% endraw %}
  </script>
  <script id="JsQty" type="text/template">
  {% raw %}
    <div class="js-qty">
      <button type="button" class="js-qty__adjust js-qty__adjust--minus icon-fallback-text" data-id="{{key}}" data-qty="{{itemMinus}}">
        <span class="icon icon-minus" aria-hidden="true"></span>
        <span class="fallback-text" aria-hidden="true">&minus;</span>
        <span class="visually-hidden">{% endraw %}{{ 'cart.general.reduce_quantity' | t }}{% raw %}</span>
      </button>
      <input type="text" class="js-qty__num" value="{{itemQty}}" min="1" data-id="{{key}}" aria-label="quantity" pattern="[0-9]*" name="{{inputName}}" id="{{inputId}}">
      <button type="button" class="js-qty__adjust js-qty__adjust--plus icon-fallback-text" data-id="{{key}}" data-qty="{{itemAdd}}">
        <span class="icon icon-plus" aria-hidden="true"></span>
        <span class="fallback-text" aria-hidden="true">+</span>
        <span class="visually-hidden">{% endraw %}{{ 'cart.general.increase_quantity' | t }}{% raw %}</span>
      </button>
    </div>
  {% endraw %}
  </script>


<script type="text/javascript">
// This fires product data from the slide cart every time it is in view

const getSlideCartItemData = () => {
    const $slideCartProduct = $('#CartDrawer #CartContainer .ajaxcart__product');
    let slideCartProductData = [];
    $slideCartProduct.each(function( index ) {
        let itemName;
        let itemSku;
        let itemprice;
        let itemBrand;
        let itemCategory;
        let itemSize;
        let itemColor;
        let thisItemData;
        let itemTagCategory;
        let itemTagSubCategory;
        let itemTagProductType;
        const itemPosition = index + 1;
        let itemProductType;

        const itemPath = $(this).find('.ajaxcart__product-name').attr('href').split("?variant=")[0];;
        const requestString = itemPath + '.js';
        // console.log('requestString: ', requestString);
        $.getJSON(requestString, (product) => {
            const firstAvailableVariant = product.variants.filter(obj => {
                return obj.available === true
            })
            const tagProductType = product.tags.filter(item => {
                return item.includes('Product Type_');
            });
            if(tagProductType[0] != undefined){
              itemTagProductType = tagProductType[0].replace('Product Type_','');
              const tagProductCategory = product.tags.filter(item => {
                return item.includes('Category_');
              });
              itemTagCategory = tagProductType[0].replace('Category_','');
            }
          const tagProductSubCategory = product.tags.filter(item => {
            return item.includes('Sub Category_');
          });
           
          if(tagProductSubCategory[0] != undefined){
            itemTagSubCategory = tagProductSubCategory[0].replace('Sub Category_','');
          }
            itemName = product.title;
            itemCategory = itemTagProductType + ' / ' + itemTagCategory + ' / ' + itemTagSubCategory;
            itemSku = firstAvailableVariant[0].sku;
            itemBrand = product.vendor;
            itemPrice = (product.price/100).toFixed(2);
            itemSize = firstAvailableVariant[0].option2;
            itemColor = firstAvailableVariant[0].option1;
        }).done(function( data ) {
            thisItemData = {
                'name': itemName,
                'id': itemSku,
                'brand': itemBrand,
                'category': itemCategory,
                'variant': itemSize,
                'list': 'pdp-recp',
                'position': itemPosition,
                'dimension2': itemColor
            }
            slideCartProductData.push(thisItemData);
        });
    });
//     console.log('slideCartProductData:');
//     console.log(slideCartProductData);

    dataLayer.push({
            event: 'productImpression',
            uaCategory: 'cart sidebar', //  event location
            uaAction: 'product impression',
            uaLabel: 'cart sidebar-reco', //list name
            'ecommerce': {
                'currencyCode': 'CAD',
                'impressions': slideCartProductData
            }
    });
}

// const startObservingSlideOutCartForUpdates = () => {
//     // get Recently Viewed Item Data when present
//     const handleCanvas = (canvas) => {
//         if (document.querySelector('body').classList.contains('ctm_mini_cart_active')) {
//             // console.log('cart update detected');
//             getSlideCartItemData(); 
//         }
//     }

//     // set up the mutation observer
//     const observer = new MutationObserver( (mutations, instance) => {
//         const canvas = document.querySelector('body');
//         if (canvas) {
//             handleCanvas(canvas);
//             // instance.disconnect(); // stop observing
//             return;
//         }
//     });

//     // start observing
//     observer.observe(document.querySelector('body'), {
//         attributes: true
//     });
// }

// if (document.querySelector('#CartDrawer #CartContainer')) {
//     startObservingSlideOutCartForUpdates();
// }
</script>
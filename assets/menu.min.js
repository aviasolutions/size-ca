var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.findInternal = function (a, d, c) {
    a instanceof String && (a = String(a));
    for (var b = a.length, e = 0; e < b; e++) {
        var f = a[e];
        if (d.call(c, f, e, a)) return { i: e, v: f };
    }
    return { i: -1, v: void 0 };
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty =
    $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties
        ? Object.defineProperty
        : function (a, d, c) {
              a != Array.prototype && a != Object.prototype && (a[d] = c.value);
          };
$jscomp.getGlobal = function (a) {
    return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function (a, d, c, b) {
    if (d) {
        c = $jscomp.global;
        a = a.split(".");
        for (b = 0; b < a.length - 1; b++) {
            var e = a[b];
            e in c || (c[e] = {});
            c = c[e];
        }
        a = a[a.length - 1];
        b = c[a];
        d = d(b);
        d != b && null != d && $jscomp.defineProperty(c, a, { configurable: !0, writable: !0, value: d });
    }
};
$jscomp.polyfill(
    "Array.prototype.find",
    function (a) {
        return a
            ? a
            : function (a, c) {
                  return $jscomp.findInternal(this, a, c).v;
              };
    },
    "es6",
    "es3"
);
jQuery(document).ready(function (a) {
    function d() {
        var b = a(".cd-dropdown").hasClass("dropdown-is-active") ? !1 : !0;
        a(".cd-dropdown").toggleClass("dropdown-is-active", b);
        a(".cd-dropdown-trigger").toggleClass("dropdown-is-active", b);
        if (!b)
            a(".cd-dropdown").one("webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend", function () {
                a(".has-children ul").addClass("is-hidden");
                a(".move-out").removeClass("move-out");
                a(".is-active").removeClass("is-active");
            });
    }
    a(".cd-dropdown-trigger").on("click", function (a) {
        a.preventDefault();
        d();
    });
    a(".cd-dropdown .cd-close").on("click", function (a) {
        a.preventDefault();
        d();
    });
    a(".has-children")
        .children("a")
        .on("click", function (b) {
            b.preventDefault();
            a(this).next("ul").removeClass("is-hidden").end().parent(".has-children").parent("ul").addClass("move-out");
        });
    var c = a(".cd-dropdown-wrapper").hasClass("open-to-left") ? "left" : "right";
    a(".cd-dropdown-content").menuAim({
        activate: function (b) {
            a(b).children().addClass("is-active").removeClass("fade-out");
            0 == a(".cd-dropdown-content .fade-in").length && a(b).children("ul").addClass("fade-in");
        },
        deactivate: function (b) {
            a(b).children().removeClass("is-active");
            if (0 == a("li.has-children:hover").length || a("li.has-children:hover").is(a(b))) a(".cd-dropdown-content").find(".fade-in").removeClass("fade-in"), a(b).children("ul").addClass("fade-out");
        },
        exitMenu: function () {
            a(".cd-dropdown-content").find(".is-active").removeClass("is-active");
            return !0;
        },
        submenuDirection: c,
    });
    a(".go-back").on("click", function () {
        var b = a(this);
        a(this).parent("ul").parent(".has-children").parent("ul");
        b.parent("ul").addClass("is-hidden").parent(".has-children").parent("ul").removeClass("move-out");
    });
    
   if(Modernizr.input != undefined){
       Modernizr.input.placeholder ||
         (a("[placeholder]")
          .focus(function () {
         var b = a(this);
         b.val() == b.attr("placeholder") && b.val("");
       })
          .blur(function () {
         var b = a(this);
         ("" != b.val() && b.val() != b.attr("placeholder")) || b.val(b.attr("placeholder"));
       })
          .blur(),
          a("[placeholder]")
          .parents("form")
          .submit(function () {
         a(this)
         .find("[placeholder]")
         .each(function () {
           var b = a(this);
           b.val() == b.attr("placeholder") && b.val("");
         });
       }));
   }
});
